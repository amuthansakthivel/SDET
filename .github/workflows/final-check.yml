name: final check
concurrency:
  group: create-release
  cancel-in-progress: false
on:
  workflow_dispatch:
  schedule:
  - cron: "30 1 * * 2"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: development
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: evaluate branch name
        id: branch_name
        run: echo "branch-name=release-mobile-$(date --iso-8601)" >> $GITHUB_OUTPUT

      - name: print branch name
        run: echo ${{ steps.branchname.outputs.branch-name }}

      - name: Create new release branch
        run: git push origin "development:${{ steps.branch_name.outputs.branch-name }}"

      - name: muster pull request logs
        id: pull_request_logs
        run: echo "pull-request-logs=$(git log --cherry-pick --oneline origin/main... origin/development)" >> $GITHUB_OUTPUT

      - name: create-pull-request
        id: create-pull-request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "${{ steps.branch_name.outputs.branch-name }}"
          destination_branch: "main"
          pr_title: "Pulling ${{ steps.branch_name.outputs.branch-name }} into main"
          pr_body: |
              :crown: *An automated PR created to merge release branch into main*  
              ${{ steps.pull_request_logs.outputs.pull-request-logs }}
          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: print pull request url
        run: echo ${{steps.create-pull-request.outputs.pr_url}}
